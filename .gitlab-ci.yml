image: $REGISTRY_CI/gitlab-ci-base:buster

stages:
  - build-test
  - test
  - package
  - release
  - build
  - deploy

variables:
  RELEASE_NAME: ${DOCKER_STACK}-${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}

########################
####  TEMPLATE      ####
########################

.test_template: &test_definition
  stage: test
  tags:
    - small
  allow_failure: false
  variables:
    HIPAY_API_USER_TEST: $HIPAY_API_USER_TEST
    HIPAY_API_PASSWORD_TEST: $HIPAY_API_PASSWORD_TEST
    HIPAY_TOKENJS_PUBLICKEY_TEST: $HIPAY_TOKENJS_PUBLICKEY_TEST
    HIPAY_TOKENJS_USERNAME_TEST: $HIPAY_TOKENJS_USERNAME_TEST
    HIPAY_SECRET_PASSPHRASE_TEST: $HIPAY_SECRET_PASSPHRASE_TEST
    HIPAY_API_MOTO_USER_TEST: $HIPAY_API_USER_TEST
    HIPAY_API_MOTO_PASSWORD_TEST: $HIPAY_API_PASSWORD_TEST
    HIPAY_MOTO_SECRET_PASSPHRASE_TEST: $HIPAY_SECRET_PASSPHRASE_TEST
    PI_CI_DATA_URL: $PI_CI_DATA_URL
    ACTIVE_METHODS: credit_card,paypal
    WOOCOMMERCE_VERSION: 8.2.2
    ADMIN_USERNAME: demo@hipay.com
    ADMIN_EMAIL: demo@hipay.com
    ADMIN_PASSWORD: hipay123
    WORDPRESS_URL: http://woocommerce
    WORDPRESS_DB_HOST: database
    WORDPRESS_DB_USER: wordpress
    WORDPRESS_DB_PASSWORD: wordpress
    MYSQL_ROOT_PASSWORD: somewordpress
    MYSQL_DATABASE: wordpress
    MYSQL_USER: wordpress
    MYSQL_PASSWORD: wordpress

  services:
    - name: $CI_REGISTRY/test-jobs-${DOCKER_STACK}-${DOCKER_SERVICE}_web:${CI_COMMIT_REF_SLUG}
      alias: woocommerce
    - name: mysql:5.7
      alias: database
  artifacts:
    paths:
      - bin/tests/cypress/videos
      - bin/tests/cypress/screenshots
    when: always
  except:
    variables:
      - $ONLY_DEPLOY
      - $CI_COMMIT_MESSAGE =~ /skip-tests/

.login_to_registry: &login-to-registry
  before_script:
    - 'mkdir /tmp'
    - 'touch /tmp/credentials.json'
    - 'echo ${SA_REGISTRY_CD} > /tmp/credentials.json'
    - 'export GOOGLE_APPLICATION_CREDENTIALS=/tmp/credentials.json'

.login_to_cd: &login-to-cd
  before_script:
    # Connect GCP with deploy service account
    - mkdir -p /tmp
    - touch /tmp/credentials.json
    - echo ${SA_DEPLOY_CD} > /tmp/credentials.json
    - gcloud auth activate-service-account "${SA_DEPLOY_NAME}" --key-file="/tmp/credentials.json"
    - gcloud config set project "${GCP_CD_PROJECT_ID}"
    - gcloud config set compute/zone "${GCP_CD_CLUSTER_REGION}"
    - gcloud container clusters get-credentials "${GCP_CD_CLUSTER_NAME}"

#########################
####  JOBS          ####
########################

build-test:
  stage: build-test
  image:
    name: gcr.io/kaniko-project/executor:v1.6.0-debug
  script:
    - /kaniko/executor
      --cache=true
      --context "dir://${CI_PROJECT_DIR}"
      --dockerfile "./bin/docker/images/woocommerce/Dockerfile"
      --destination "$CI_REGISTRY/test-jobs-${DOCKER_STACK}-${DOCKER_SERVICE}_web:${CI_COMMIT_REF_SLUG}"
  except:
    variables:
      - $ONLY_DEPLOY
  tags:
    - small

.test-cypress-1:
  <<: *test_definition
  script:
    - cp ./bin/tests/.npmrc.sample ./bin/tests/.npmrc
    - cd ./bin/tests
    - yarn install
    - curl --retry 10 --retry-delay 5 --retry-connrefused --output /dev/null http://woocommerce
    - bash /tools/run-cypress-test.sh -f $TESTS_FOLDERS_1 -e $EXCLUDED_TEST_FILES --config baseUrl=http://woocommerce --env $CYPRESS_ENV

.test-cypress-2:
  <<: *test_definition
  script:
    - cp ./bin/tests/.npmrc.sample ./bin/tests/.npmrc
    - cd ./bin/tests
    - yarn install
    - curl --retry 10 --retry-delay 5 --retry-connrefused --output /dev/null http://woocommerce
    - bash /tools/run-cypress-test.sh -f $TESTS_FOLDERS_2 -e $EXCLUDED_TEST_FILES --config baseUrl=http://woocommerce --env $CYPRESS_ENV

package:
  stage: package
  before_script:
    - apt-get install -y zip sshpass
  script:
    - echo "Package module $CI_COMMIT_REF_SLUG"
    - cd src/woocommerce_hipayenterprise
    - composer install --no-dev
    - cd ../..
    - ./bin/package/builder.sh -v $CI_COMMIT_REF_SLUG
  artifacts:
    paths:
      - ./bin/package
  except:
    variables:
      - $ONLY_DEPLOY
  tags:
    - small

# Job to get JIRA tickets of the release
get-jira-tickets:
  stage: release
  image: node:latest
  rules:
    - if: $CI_COMMIT_TAG
    - if: $ONLY_DEPLOY
      when: never
  script:
    - |
      node <<EOF
      (async () => {
        try {
          const gitlabResponse = await fetch("${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/merge_requests?state=merged&target_branch=develop&milestone=${CI_COMMIT_TAG}", {
            method: "GET",
            headers: {
              "Private-Token": "$GITLAB_API_TOKEN"
            }
          });

          if (!gitlabResponse.ok) {
            const err = await gitlabResponse.json();
            throw new Error("Failed to send GitLab request: " + JSON.stringify(err));
          }

          const mergeRequests = await gitlabResponse.json();
          let tickets = [];

          mergeRequests.forEach((mr) => {
            const matches = mr.source_branch.match(/EC-\d+/);
            if(matches?.length) {
              tickets.push(matches[0].toUpperCase());
            }
          });

          tickets = [...new Set(tickets)];

          console.log("tickets", tickets);

          const payload = {
            "event_type": "trigger-artifact-workflow",
            "client_payload": {
              "tickets": tickets
            }
          };

          console.log("payload", JSON.stringify(payload));

          const githubResponse = await fetch("https://api.github.com/repos/${GITHUB_ORGANIZATION}/${GITHUB_PROJECT}/dispatches", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              "Authorization": "Bearer ${GITHUB_TOKEN}",
              "User-Agent": "Node.js"
            },
            body: JSON.stringify(payload)
          });

          if (!githubResponse.ok) {
            const err = await githubResponse.json();
            throw new Error("Failed to send GitHub event: " + JSON.stringify(err));
          }
        } catch (error) {
          throw new Error("Request error: " + error.message);
        }
      })();
      EOF

# Release note job
release-job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - get-jira-tickets
  variables:
    TEMP_CHANGELOG_FILE: 'release_changelog.txt'
  rules:
    - if: $CI_COMMIT_TAG
    - if: $ONLY_DEPLOY
      when: never
  script:
    - |
      # Extract changelog part according to tag version
      CHANGELOG=$(awk -v version="## $CI_COMMIT_TAG" '
        $0 ~ version {printit=1; next}
        printit && /^## / {exit}
        printit {print}
      ' CHANGELOG.md)

      {
        echo "# CHANGE LOG"
        echo "$CHANGELOG"
      } > "$TEMP_CHANGELOG_FILE"
    - cat "$TEMP_CHANGELOG_FILE"
  release:
    tag_name: $CI_COMMIT_TAG
    name: Version $CI_COMMIT_TAG
    description: '$TEMP_CHANGELOG_FILE'
    milestones:
      - $CI_COMMIT_TAG

build:
  <<: *login-to-registry
  stage: build
  needs: []
  image:
    name: gcr.io/kaniko-project/executor:v1.6.0-debug
  rules:
    - if: $ONLY_DEPLOY
      when: on_success
    - if: $CI_PIPELINE_SOURCE == "push"
      when: manual
  script:
    - /kaniko/executor
      --cache=true
      --context "dir://${CI_PROJECT_DIR}"
      --dockerfile "./bin/docker/images/woocommerce/Dockerfile"
      --destination "${REGISTRY_CD}/${DOCKER_STACK}-${DOCKER_SERVICE}-web:${CI_COMMIT_REF_SLUG}"
  tags:
    - small

deploy2recette:
  <<: *login-to-cd
  stage: deploy
  image: $REGISTRY_CI/gitlab-ci-base:deployment
  variables:
    GPC_ACCOUNT: ''
  needs:
    - build
  script:
    - echo $RELEASE_NAME
    - >
      helm install $RELEASE_NAME ./bin/docker/kubernetes/helm/
      --namespace default
      --set wordpress_image="${REGISTRY_CD}/${DOCKER_STACK}-${DOCKER_SERVICE}-web"
      --set wordpress_tag="${CI_COMMIT_REF_SLUG}"
      --set wordpress_url="${DOCKER_STACK}-${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}.${URL_CD}"
      --set hipay_api_user_test="$HIPAY_API_USER_RE7"
      --set hipay_api_password_test="$HIPAY_API_PASSWORD_RE7"
      --set hipay_tokenjs_username_test="$HIPAY_TOKENJS_USERNAME_RE7"
      --set hipay_tokenjs_publickey_test="$HIPAY_TOKENJS_PUBLICKEY_RE7"
      --set hipay_secret_passphrase_test="$HIPAY_SECRET_PASSPHRASE_RE7"
      --set pi_data_url="$PI_CI_DATA_URL"
  allow_failure: true
  tags:
    - small
  rules:
    - if: $ONLY_DEPLOY
      when: on_success
    - if: $CI_PIPELINE_SOURCE == "push"
      when: manual
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    url: https://${DOCKER_STACK}-${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}.${URL_CD}
    on_stop: stop_review

stop_review:
  <<: *login-to-cd
  stage: deploy
  image: $REGISTRY_CI/gitlab-ci-base:deployment
  variables:
    GIT_STRATEGY: none
  needs:
    - deploy2recette
  script:
    - helm uninstall $RELEASE_NAME --namespace=default
  when: manual
  rules:
    - if: $ONLY_DEPLOY
      when: on_success
    - if: $CI_PIPELINE_SOURCE == "push"
      when: manual
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    action: stop
  tags:
    - small
